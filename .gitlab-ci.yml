image: lorisleiva/laravel-docker:latest

# Variables
variables:
  MYSQL_ROOT_PASSWORD: Temp@@9921
  MYSQL_DATABASE: collab
  DB_HOST: mysql
  DB_USERNAME: root
  GIT_STRATEGY: clone

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

# Replace the last line with the following lines if you'd rather
# leave StrictHostKeyChecking enabled (replace yourdomain.com):
#
#  ssh-keyscan yourdomain.com >> ~/.ssh/known_hosts
#  chmod 644 ~/.ssh/known_hosts
  
.change_file_permissions: &change_file_permissions |
  find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;    
  find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;
    
composer:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/
  script:
      - git config --global --add safe.directory $CI_PROJECT_DIR
      - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
      - cp .env.example .env
      - php artisan key:generate
  artifacts:
    expire_in: 1 month
    paths:
      - vendor/
      - .env

npm:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/
  script:
      - npm install
      - npm run build
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/
      - public/css/
      - public/js/

codestyle:
  stage: test
  dependencies: []
  script:
    - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app
  only:
    - testing # or the name of your main branch
    
phpunit:
  stage: test
  services:
    - name: mysql:5.7
  image: chilio/laravel-dusk-ci:latest
  dependencies:
    - composer
  script:
    - cp .env.example .env
    - composer install
    - npm install
    - npm run build
    - configure-laravel
    - start-nginx-ci-project
    - sleep 3
    - php ./vendor/bin/phpunit --testsuite=Feature


browser:
  stage: test
  services:
    - name: mysql:5.7
  image: chilio/laravel-dusk-ci:latest
  script:
    - cp .env.example .env
    - composer install
    - npm install
    - npm run build
    - configure-laravel
    - start-nginx-ci-project
    - sleep 3
    - php artisan dusk --colors --debug
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - tests/Browser/screenshots/
    expire_in: 2 weeks
    when: always
  only:
    - testing # or the name of your main branch

sonartest:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - testing # or the name of your main branch

staging:
  stage: deploy
  script:
    - *init_ssh
    - *change_file_permissions
    - vendor/bin/dep deploy
  environment:
    name: staging
    url: http://dev.yourdomain.com
  only:
    - development
  
production:
  stage: deploy
  script:
    - *init_ssh
    - *change_file_permissions
    - vendor/bin/dep deploy production
  environment:
    name: production
    url: http://yourdomain.com
  only:
   - main